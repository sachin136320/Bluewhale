// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using aptmgt.webui.Data;

namespace aptmgt.webui.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20200222185804_MajorUpdate")]
    partial class MajorUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AppData")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("aptmgt.entity.Accounts.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("AccountType")
                        .HasColumnType("text");

                    b.Property<int>("Accountno")
                        .HasColumnType("integer");

                    b.Property<string>("Bankname")
                        .HasColumnType("text");

                    b.Property<string>("Commid")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrntBalance")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Dateadded")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("aptmgt.entity.Accounts.Expense", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Commid")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ExpenseType")
                        .HasColumnType("text");

                    b.Property<int>("TranID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("aptmgt.entity.Accounts.MonthlyMaint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Commid")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Fltno")
                        .HasColumnType("text");

                    b.Property<int>("Mobno")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerName")
                        .HasColumnType("text");

                    b.Property<int>("TranID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("MonthlyMaint");
                });

            modelBuilder.Entity("aptmgt.entity.Accounts.SourceOthers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Commid")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SourceName")
                        .HasColumnType("text");

                    b.Property<int>("TranID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("SourceOthers");
                });

            modelBuilder.Entity("aptmgt.entity.Accounts.TransactionMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Commid")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TranID")
                        .HasColumnType("integer");

                    b.Property<string>("TranType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TransactionMaster");
                });

            modelBuilder.Entity("aptmgt.entity.Accounts.maintMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Commid")
                        .HasColumnType("text");

                    b.Property<string>("Fltno")
                        .HasColumnType("text");

                    b.Property<int>("MaintAmount")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("maintMaster");
                });

            modelBuilder.Entity("aptmgt.entity.assets.AssetDetails", b =>
                {
                    b.Property<string>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Asset_NR")
                        .HasColumnType("text");

                    b.Property<string>("Asset_Type")
                        .HasColumnType("text");

                    b.Property<string>("Asset_category")
                        .HasColumnType("text");

                    b.Property<DateTime>("Asset_last_servce")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Asset_name")
                        .HasColumnType("text");

                    b.Property<DateTime>("Asset_procure_Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Asset_service_Freq")
                        .HasColumnType("text");

                    b.Property<string>("Asset_service_flag")
                        .HasColumnType("text");

                    b.Property<string>("CommunityId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("AssetId");

                    b.HasIndex("CommunityId");

                    b.ToTable("AssetDetails");
                });

            modelBuilder.Entity("aptmgt.entity.assets.AssetRequest", b =>
                {
                    b.Property<string>("AssetRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Asset_Name")
                        .HasColumnType("text");

                    b.Property<string>("Asset_Purpose")
                        .HasColumnType("text");

                    b.Property<string>("Asset_cost")
                        .HasColumnType("text");

                    b.Property<string>("Ast_added")
                        .HasColumnType("text");

                    b.Property<string>("CommunityId")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Procure_approval")
                        .HasColumnType("text");

                    b.Property<string>("Procurestatus")
                        .HasColumnType("text");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Requeststatus")
                        .HasColumnType("text");

                    b.HasKey("AssetRequestID");

                    b.HasIndex("CommunityId");

                    b.ToTable("AssetRequest");
                });

            modelBuilder.Entity("aptmgt.entity.assets.ServiceDetails", b =>
                {
                    b.Property<string>("ServiceDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AssetId")
                        .HasColumnType("text");

                    b.Property<string>("Asset_NR")
                        .HasColumnType("text");

                    b.Property<string>("Asset_Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("Asset_last_servce")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Asset_next_service")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Asset_service_Freq")
                        .HasColumnType("text");

                    b.Property<DateTime>("Asset_service_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Asset_service_flag")
                        .HasColumnType("text");

                    b.Property<string>("CommunityId")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ServiceDetailID");

                    b.HasIndex("CommunityId");

                    b.ToTable("ServiceDetails");
                });

            modelBuilder.Entity("aptmgt.entity.assets.ServiceHistory", b =>
                {
                    b.Property<string>("ServiceHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AssetId")
                        .HasColumnType("text");

                    b.Property<string>("Asset_NR")
                        .HasColumnType("text");

                    b.Property<string>("Asset_Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("Asset_last_servce")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Asset_service_Freq")
                        .HasColumnType("text");

                    b.Property<DateTime>("Asset_service_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Asset_service_flag")
                        .HasColumnType("text");

                    b.Property<string>("CommunityId")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ServiceHistoryID");

                    b.HasIndex("CommunityId");

                    b.ToTable("ServiceHistory");
                });

            modelBuilder.Entity("aptmgt.entity.builder.Builder", b =>
                {
                    b.Property<string>("BuilderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Pincode")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("BuilderId");

                    b.ToTable("Builder");
                });

            modelBuilder.Entity("aptmgt.entity.community.CommunityBlock", b =>
                {
                    b.Property<string>("BlockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Blckname")
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<int>("NumberofFlats")
                        .HasColumnType("integer");

                    b.Property<int>("NumberofFloors")
                        .HasColumnType("integer");

                    b.HasKey("BlockID");

                    b.HasIndex("CommunityID");

                    b.ToTable("CommunityBlock");
                });

            modelBuilder.Entity("aptmgt.entity.community.CommunityDetails", b =>
                {
                    b.Property<string>("CommunityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BuilderID")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Pincode")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("CommunityId");

                    b.HasIndex("BuilderID");

                    b.ToTable("CommunityDetails");
                });

            modelBuilder.Entity("aptmgt.entity.community.CommunityFlats", b =>
                {
                    b.Property<string>("FlatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("BlockID")
                        .HasColumnType("text");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("text");

                    b.Property<string>("FloorNumber")
                        .HasColumnType("text");

                    b.HasKey("FlatID");

                    b.HasIndex("BlockID");

                    b.ToTable("CommunityFlats");
                });

            modelBuilder.Entity("aptmgt.entity.facility.FacilityBooking", b =>
                {
                    b.Property<string>("FacilityBookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Booking_ID")
                        .HasColumnType("text");

                    b.Property<DateTime>("Booking_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Booking_description")
                        .HasColumnType("text");

                    b.Property<string>("Booking_duration")
                        .HasColumnType("text");

                    b.Property<DateTime>("Booking_end_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Booking_facility")
                        .HasColumnType("text");

                    b.Property<DateTime>("Booking_start_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Booking_status")
                        .HasColumnType("text");

                    b.Property<string>("CommunityId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Owner_flatno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_name")
                        .HasColumnType("text");

                    b.HasKey("FacilityBookingID");

                    b.HasIndex("CommunityId");

                    b.ToTable("FacilityBooking");
                });

            modelBuilder.Entity("aptmgt.entity.facility.FacilityBookingHistory", b =>
                {
                    b.Property<string>("FacilityBookingHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Booking_ID")
                        .HasColumnType("text");

                    b.Property<DateTime>("Booking_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Booking_description")
                        .HasColumnType("text");

                    b.Property<string>("Booking_duration")
                        .HasColumnType("text");

                    b.Property<DateTime>("Booking_end_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Booking_facility")
                        .HasColumnType("text");

                    b.Property<DateTime>("Booking_start_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Booking_status")
                        .HasColumnType("text");

                    b.Property<string>("CommunityId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Owner_flatno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_name")
                        .HasColumnType("text");

                    b.HasKey("FacilityBookingHistoryID");

                    b.HasIndex("CommunityId");

                    b.ToTable("FacilityBookingHistory");
                });

            modelBuilder.Entity("aptmgt.entity.facility.FacilityMaster", b =>
                {
                    b.Property<string>("FacilityMasterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Bookable")
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<string>("FacilityName")
                        .HasColumnType("text");

                    b.HasKey("FacilityMasterID");

                    b.HasIndex("CommunityID");

                    b.ToTable("FacilityMaster");
                });

            modelBuilder.Entity("aptmgt.entity.parking.ParkingAssignment", b =>
                {
                    b.Property<string>("ParkingAssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Occupied")
                        .HasColumnType("text");

                    b.Property<string>("Owner_email")
                        .HasColumnType("text");

                    b.Property<string>("Owner_flatno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_fname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_lname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_phno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_slotno")
                        .HasColumnType("text");

                    b.Property<string>("Parking_ID")
                        .HasColumnType("text");

                    b.HasKey("ParkingAssignmentID");

                    b.HasIndex("CommunityID");

                    b.ToTable("ParkingAssignment");
                });

            modelBuilder.Entity("aptmgt.entity.parking.ParkingAssignmentHistory", b =>
                {
                    b.Property<string>("ParkingAssignmentHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Owner_email")
                        .HasColumnType("text");

                    b.Property<string>("Owner_flatno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_fname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_lname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_phno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_slotno")
                        .HasColumnType("text");

                    b.Property<string>("Parking_ID")
                        .HasColumnType("text");

                    b.HasKey("ParkingAssignmentHistoryID");

                    b.HasIndex("CommunityID");

                    b.ToTable("ParkingAssignmentHistory");
                });

            modelBuilder.Entity("aptmgt.entity.poll.Poll", b =>
                {
                    b.Property<string>("PollID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<DateTime>("Currdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IsOpen")
                        .HasColumnType("text");

                    b.Property<DateTime>("PollEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PollName")
                        .HasColumnType("text");

                    b.Property<DateTime>("PollStart")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("PollID");

                    b.HasIndex("CommunityID");

                    b.ToTable("Poll");
                });

            modelBuilder.Entity("aptmgt.entity.poll.PollQuestion", b =>
                {
                    b.Property<string>("PollQuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PollID")
                        .HasColumnType("text");

                    b.Property<string>("PollName")
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.HasKey("PollQuestionID");

                    b.HasIndex("CommunityID");

                    b.HasIndex("PollID");

                    b.ToTable("PollQuestion");
                });

            modelBuilder.Entity("aptmgt.entity.poll.PollResponse", b =>
                {
                    b.Property<string>("PollResponseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PollID")
                        .HasColumnType("text");

                    b.Property<string>("PollName")
                        .HasColumnType("text");

                    b.Property<string>("PollQuestionID")
                        .HasColumnType("text");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("PollResponseID");

                    b.HasIndex("CommunityID");

                    b.HasIndex("PollID");

                    b.HasIndex("PollQuestionID");

                    b.ToTable("PollResponse");
                });

            modelBuilder.Entity("aptmgt.entity.user.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("aptmgt.entity.user.CommunityUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("CommunityUser");
                });

            modelBuilder.Entity("aptmgt.entity.user.OwnerMaster", b =>
                {
                    b.Property<string>("ResidentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("AgreementCopySubmitted")
                        .HasColumnType("boolean");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FlatID")
                        .HasColumnType("text");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<bool>("Occupied")
                        .HasColumnType("boolean");

                    b.Property<string>("OwnerType")
                        .HasColumnType("text");

                    b.Property<string>("QRText")
                        .HasColumnType("text");

                    b.HasKey("ResidentID");

                    b.HasIndex("CommunityID");

                    b.HasIndex("FlatID");

                    b.ToTable("OwnerMaster");
                });

            modelBuilder.Entity("aptmgt.entity.user.Role", b =>
                {
                    b.Property<string>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Rolename")
                        .HasColumnType("text");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("aptmgt.entity.user.VisitorDetails", b =>
                {
                    b.Property<string>("VisitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("CheckInDate")
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NumberOfVisitor")
                        .HasColumnType("text");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("bytea");

                    b.Property<string>("ResidentID")
                        .HasColumnType("text");

                    b.Property<string>("VisitorType")
                        .HasColumnType("text");

                    b.HasKey("VisitID");

                    b.HasIndex("CommunityID");

                    b.ToTable("VisitorDetails");
                });

            modelBuilder.Entity("aptmgt.entity.vehicles.VehicleDetails", b =>
                {
                    b.Property<string>("VehicleDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Owner_email")
                        .HasColumnType("text");

                    b.Property<string>("Owner_flatno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_fname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_lname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_phno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_slotno")
                        .HasColumnType("text");

                    b.Property<string>("Vehicle_no")
                        .HasColumnType("text");

                    b.HasKey("VehicleDetailsID");

                    b.HasIndex("CommunityID");

                    b.ToTable("VehicleDetails");
                });

            modelBuilder.Entity("aptmgt.entity.vehicles.VehicleDetailsHistory", b =>
                {
                    b.Property<string>("VehicleDetailsHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CommunityID")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Owner_email")
                        .HasColumnType("text");

                    b.Property<string>("Owner_flatno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_fname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_lname")
                        .HasColumnType("text");

                    b.Property<string>("Owner_phno")
                        .HasColumnType("text");

                    b.Property<string>("Owner_slotno")
                        .HasColumnType("text");

                    b.Property<string>("VehicleDetailsID")
                        .HasColumnType("text");

                    b.Property<string>("Vehicle_no")
                        .HasColumnType("text");

                    b.HasKey("VehicleDetailsHistoryID");

                    b.HasIndex("CommunityID");

                    b.HasIndex("VehicleDetailsID");

                    b.ToTable("VehicleDetailsHistory");
                });

            modelBuilder.Entity("aptmgt.entity.assets.AssetDetails", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityId");
                });

            modelBuilder.Entity("aptmgt.entity.assets.AssetRequest", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityId");
                });

            modelBuilder.Entity("aptmgt.entity.assets.ServiceDetails", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityId");
                });

            modelBuilder.Entity("aptmgt.entity.assets.ServiceHistory", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityId");
                });

            modelBuilder.Entity("aptmgt.entity.community.CommunityBlock", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany("Blocks")
                        .HasForeignKey("CommunityID");
                });

            modelBuilder.Entity("aptmgt.entity.community.CommunityDetails", b =>
                {
                    b.HasOne("aptmgt.entity.builder.Builder", "Builder")
                        .WithMany("Communities")
                        .HasForeignKey("BuilderID");
                });

            modelBuilder.Entity("aptmgt.entity.community.CommunityFlats", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityBlock", "Block")
                        .WithMany("Flats")
                        .HasForeignKey("BlockID");
                });

            modelBuilder.Entity("aptmgt.entity.facility.FacilityBooking", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityId");
                });

            modelBuilder.Entity("aptmgt.entity.facility.FacilityBookingHistory", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityId");
                });

            modelBuilder.Entity("aptmgt.entity.facility.FacilityMaster", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany("Facility")
                        .HasForeignKey("CommunityID");
                });

            modelBuilder.Entity("aptmgt.entity.parking.ParkingAssignment", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");
                });

            modelBuilder.Entity("aptmgt.entity.parking.ParkingAssignmentHistory", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");
                });

            modelBuilder.Entity("aptmgt.entity.poll.Poll", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");
                });

            modelBuilder.Entity("aptmgt.entity.poll.PollQuestion", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");

                    b.HasOne("aptmgt.entity.poll.Poll", "Poll")
                        .WithMany()
                        .HasForeignKey("PollID");
                });

            modelBuilder.Entity("aptmgt.entity.poll.PollResponse", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");

                    b.HasOne("aptmgt.entity.poll.Poll", "Poll")
                        .WithMany()
                        .HasForeignKey("PollID");

                    b.HasOne("aptmgt.entity.poll.PollQuestion", "PollQuestion")
                        .WithMany()
                        .HasForeignKey("PollQuestionID");
                });

            modelBuilder.Entity("aptmgt.entity.user.OwnerMaster", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");

                    b.HasOne("aptmgt.entity.community.CommunityFlats", "CommunityFlats")
                        .WithMany()
                        .HasForeignKey("FlatID");
                });

            modelBuilder.Entity("aptmgt.entity.user.VisitorDetails", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");
                });

            modelBuilder.Entity("aptmgt.entity.vehicles.VehicleDetails", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");
                });

            modelBuilder.Entity("aptmgt.entity.vehicles.VehicleDetailsHistory", b =>
                {
                    b.HasOne("aptmgt.entity.community.CommunityDetails", "ParentCommunity")
                        .WithMany()
                        .HasForeignKey("CommunityID");

                    b.HasOne("aptmgt.entity.vehicles.VehicleDetails", "VehicleDetails")
                        .WithMany()
                        .HasForeignKey("VehicleDetailsID");
                });
#pragma warning restore 612, 618
        }
    }
}
